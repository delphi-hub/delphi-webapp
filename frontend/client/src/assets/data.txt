(concrete) classes
(standard) interface
0 FPC
0 MPC
0 NOC
1-3 CPP
1-3 FPC
1-3 MPC
1-3 NOC
2-3 McCabe
4-10 CPP
4-10 FPC
4-10 MPC
4-10 McCabe
4-10 NOC
>10 CPP
>10 FPC
>10 MPC
>10 McCabe
>10 NOC
AWT
Augmented Type
Box
Canopy
Class File JDK 1.1 (JDK 1.0.2)
Class File Java 5
Class File Java 6
Class File Java 7
Class File Java 8
Class File Java 9
Class File With Source Attribute
Cobol Like
Common State
Compound Box
Data Manager
Designator
Environment
Extender
FanIn - Category 1
FanIn - Category 2
FanIn - Category 3
FanIn - Category 4
FanIn - Category 5
FanIn - Category 6
FanIn/FanOut - Category 1
FanIn/FanOut - Category 2
FanIn/FanOut - Category 3
FanIn/FanOut - Category 4
FanIn/FanOut - Category 5
FanIn/FanOut - Category 6
FanOut - Category 1
FanOut - Category 2
FanOut - Category 3
FanOut - Category 4
FanOut - Category 5
FanOut - Category 6
Function Object
Function Pointer
Huge Inheritance Tree
Immutable
Implementor
JVM exit
JavaFX
Joiner
Large Inheritance Tree
Medium Inheritance Tree
Method With Line Number Table
Method With Local Variable Table
Method With Local Variable Type Table
Method with Infinite Loop
Misc
Mutually-recursive Data Structure 2
Types
Mutually-recursive Data Structure 3
Types
Mutually-recursive Data Structure 4
Types
Mutually-recursive Data Structure more
than 4 Types
Native Libraries
Network sockets
Never Returns Normally
Nontrivial Class.forName Usage
Object-based Thread Notification
Outline
Overrider
Pool
Process
Pseudo Class
Pure Type
Record
Restricted Creation
Retrieving some ClassLoader
Retrieving the SystemClassLoader
SWT
Sampler
Self-recursive Data Structure
Sink
Size of the Inheritance Tree Unknown
Small Inheritance Tree
Sound
State Machine
Stateless
Swing
Taxonomy
Trait
Trivial Class.forName Usage
Unsafe - Alloc
Unsafe - Array
Unsafe - Class
Unsafe - Fence
Unsafe - Fetch & Add
Unsafe - Heap
Unsafe - Heap Get
Unsafe - Heap Put
Unsafe - Monitor
Unsafe - Off-Heap
Unsafe - Offset
Unsafe - Ordered Put
Unsafe - Park
Unsafe - Throw
Unsafe - Volatile Get
Unsafe - Volatile Put
Unsafe - compareAndSwap
Usage of Thread API
Usage of ThreadGroup API
Very Large Inheritance Tree
Very Small Inheritance Tree
aaload (opcode:50)
aastore (opcode:83)
abstract classes
accessing resources
aconst_null (opcode:1)
aload (opcode:25)
aload_0 (opcode:42)
aload_1 (opcode:43)
aload_2 (opcode:44)
aload_3 (opcode:45)
anewarray (opcode:189)
annotations
appending class loader search
areturn (opcode:176)
arraylength (opcode:190)
astore (opcode:58)
astore_0 (opcode:75)
astore_1 (opcode:76)
astore_2 (opcode:77)
astore_3 (opcode:78)
athrow (opcode:191)
baload (opcode:51)
bastore (opcode:84)
bipush (opcode:16)
bridge methods
caload (opcode:52)
castore (opcode:85)
checkcast (opcode:192)
class file retransformation
constructors
creation and execution of
java.sql.CallableStatement
creation and execution of
java.sql.PreparedStatement
creation and execution of
java.sql.Statement
cryptographic key handling
custom ClassLoader implementation
d2f (opcode:144)
d2i (opcode:142)
d2l (opcode:143)
dadd (opcode:99)
daload (opcode:49)
dastore (opcode:82)
dcmpg (opcode:152)
dcmpl (opcode:151)
dconst_0 (opcode:14)
dconst_1 (opcode:15)
ddiv (opcode:111)
define new classes/packages
dload (opcode:24)
dload_0 (opcode:38)
dload_1 (opcode:39)
dload_2 (opcode:40)
dload_3 (opcode:41)
dmul (opcode:107)
dneg (opcode:119)
drem (opcode:115)
dreturn (opcode:175)
dstore (opcode:57)
dstore_0 (opcode:71)
dstore_1 (opcode:72)
dstore_2 (opcode:73)
dstore_3 (opcode:74)
dsub (opcode:103)
dup (opcode:89)
dup2 (opcode:92)
dup2_x1 (opcode:93)
dup2_x2 (opcode:94)
dup_x1 (opcode:90)
dup_x2 (opcode:91)
enumerations
f2d (opcode:141)
f2i (opcode:139)
f2l (opcode:140)
fadd (opcode:98)
faload (opcode:48)
fastore (opcode:81)
fcmpg (opcode:150)
fcmpl (opcode:149)
fconst_0 (opcode:11)
fconst_1 (opcode:12)
fconst_2 (opcode:13)
fdiv (opcode:110)
fload (opcode:23)
fload_0 (opcode:34)
fload_1 (opcode:35)
fload_2 (opcode:36)
fload_3 (opcode:37)
fmul (opcode:106)
fneg (opcode:118)
frem (opcode:114)
freturn (opcode:174)
fstore (opcode:56)
fstore_0 (opcode:67)
fstore_1 (opcode:68)
fstore_2 (opcode:69)
fstore_3 (opcode:70)
fsub (opcode:102)
getfield (opcode:180)
getstatic (opcode:178)
goto (opcode:167)
goto_w (opcode:200)
i2b (opcode:145)
i2c (opcode:146)
i2d (opcode:135)
i2f (opcode:134)
i2l (opcode:133)
i2s (opcode:147)
iadd (opcode:96)
iaload (opcode:46)
iand (opcode:126)
iastore (opcode:79)
iconst_0 (opcode:3)
iconst_1 (opcode:4)
iconst_2 (opcode:5)
iconst_3 (opcode:6)
iconst_4 (opcode:7)
iconst_5 (opcode:8)
iconst_m1 (opcode:2)
idiv (opcode:108)
if_acmpeq (opcode:165)
if_acmpne (opcode:166)
if_icmpeq (opcode:159)
if_icmpge (opcode:162)
if_icmpgt (opcode:163)
if_icmple (opcode:164)
if_icmplt (opcode:161)
if_icmpne (opcode:160)
ifeq (opcode:153)
ifge (opcode:156)
ifgt (opcode:157)
ifle (opcode:158)
iflt (opcode:155)
ifne (opcode:154)
ifnonnull (opcode:199)
ifnull (opcode:198)
iinc (opcode:132)
iload (opcode:21)
iload_0 (opcode:26)
iload_1 (opcode:27)
iload_2 (opcode:28)
iload_3 (opcode:29)
imul (opcode:104)
ineg (opcode:116)
instance methods
instanceof (opcode:193)
instrumenting native methods
invokedynamic (opcode:186)
invokeinterface (opcode:185)
invokespecial (opcode:183)
invokestatic (opcode:184)
invokevirtual (opcode:182)
ior (opcode:128)
irem (opcode:112)
ireturn (opcode:172)
ishl (opcode:120)
ishr (opcode:122)
istore (opcode:54)
istore_0 (opcode:59)
istore_1 (opcode:60)
istore_2 (opcode:61)
istore_3 (opcode:62)
isub (opcode:100)
iushr (opcode:124)
ixor (opcode:130)
java.lang.Class forName
java.lang.System getSecurityManager
java.lang.System setSecurityManager
java.lang.invoke.MethodHandles lookup
java.lang.invoke.MethodHandles
publicLookup
java.lang.reflect.Method Object
invoke(Object,Object[])
java.lang.reflect.Proxy newProxyInstance
java.sql.Connection rollback
java.sql.DriverManager getConnection
javax.crypto.Cipher getInstance
jsr (opcode:168)
jsr_w (opcode:201)
l2d (opcode:138)
l2f (opcode:137)
l2i (opcode:136)
ladd (opcode:97)
laload (opcode:47)
land (opcode:127)
lastore (opcode:80)
lcmp (opcode:148)
lconst_0 (opcode:9)
lconst_1 (opcode:10)
ldc (opcode:18)
ldc2_w (opcode:20)
ldc_w (opcode:19)
ldiv (opcode:109)
linear methods (McCabe)
lload (opcode:22)
lload_0 (opcode:30)
lload_1 (opcode:31)
lload_2 (opcode:32)
lload_3 (opcode:33)
lmul (opcode:105)
lneg (opcode:117)
lookupswitch (opcode:171)
lor (opcode:129)
lrem (opcode:113)
lreturn (opcode:173)
lshl (opcode:121)
lshr (opcode:123)
lstore (opcode:55)
lstore_0 (opcode:63)
lstore_1 (opcode:64)
lstore_2 (opcode:65)
lstore_3 (opcode:66)
lsub (opcode:101)
lushr (opcode:125)
lxor (opcode:131)
makes an AccessibleObject accessible
(exact type unknown)
makes fields accessible
makes methods or constructors accessible
marker interfaces
method handle invocation
module (Java >9)
monitorenter (opcode:194)
monitorexit (opcode:195)
multianewarray (opcode:197)
native methods
new (opcode:187)
newarray (opcode:188)
non-functional interface with default
methods (Java >8)
non-functional interface with static
methods (Java >8)
nop (opcode:0)
package visible fields only used by
defining type
pop (opcode:87)
pop2 (opcode:88)
protected fields only used by defining
type
public fields only used by defininig
type
putfield (opcode:181)
putstatic (opcode:179)
reflective field read
reflective field write
reflective instance creation
ret (opcode:169)
retrieve classes information
return (opcode:177)
saload (opcode:53)
sastore (opcode:86)
simple functional interfaces (single
abstract method (SAM) interface)
sipush (opcode:17)
static initializers
static methods (not including static
initializers)
sun.misc.Unsafe sun.misc.Unsafe
getUnsafe()
swap (opcode:95)
synchronized methods
synthetic methods
tableswitch (opcode:170)
unused package visible fields
unused private fields
unused protected fields
unused public fields
using Certificates
using KeyStore
using Mac
using MessageDigest
using SecureRandom
using Signature
varargs methods
wide (opcode:196